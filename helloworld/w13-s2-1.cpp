///* 信管 2051891 黄治东 */
//#include <iostream>
//using namespace std;
//
///* ----具体要求----
//   1、不允许添加其它头文件
//   2、不允许定义全局变量、静态局部变量（全局只读变量或宏定义不受此限制）
//   3、不允许添加其它函数
//   ---------------------------------------------------------------------
//*/
//
//#define		N	81
//
///***************************************************************************
//  函数名称：
//  功    能：将长度为n的字符串向后移动m个位置
//  输入参数：char *s     ：存放字符串的字符数组
//			const int n ：字符串的长度
//			const int m ：要移动的位置
//  返 回 值：
//  说    明：
// ***************************************************************************/
//void move_data(char* s, const int n, const int m)
//{
//	/* 除这三个变量外，本函数不再允许定义任何形式的变量
//		 如果不用，允许删除，但不得增加或替换为其它形式的变量
//		包括for(int i=0; )形式的新变量定义同样禁止 */
//	char b[N] = { 0 }, * p, * q;
//
//	/* 函数的实现部分，不允许任何形式的[]出现 */
//	for (p = s;;)
//	{
//		q = p;
//		cout << s << endl;
//		for (*b = 0; *b != m - n + 1; (*b)++)
//		{
//			p++;
//			if (*b == n)
//			{
//				p = s;
//			}
//		}
//		//cout << "初始" << endl;
//		//cout << "&p=" << &p << ",&q=" << &q << ",&b=" << &b << endl;
//		//cout << "p=" << p << ",q=" << q << ",b=" << b << endl;
//		//cout << "*p=" << *p << ",*q=" << *q << ",*b=" << *b << endl;
//		*b = *q;
//		*q = *p;
//		//cout << endl;
//		//cout << "*q = *p" << endl;
//		//cout << "&p=" << &p << ",&q=" << &q << ",&b=" << &b << endl;
//		//cout << "p=" << p << ",q=" << q << ",b=" << b << endl;
//		//cout << "*p=" << *p<< ",*q=" << *q<<",*b=" << *b << endl;
//		*p = *b;
//		//cout << endl;
//		//cout << "*p = *b" << endl;
//		//cout << "&p=" << &p << ",&q=" << &q << ",&b=" << &b << endl;
//		//cout << "p=" << p << ",q=" << q << ",b=" << b << endl;
//		//cout << "*p=" << *p << ",*q=" << *q << ",*b=" << *b << endl;
//		//*b = *q;
//		//cout << endl;
//		//cout << "*b = *q" << endl;
//		//cout << "&p=" << &p << ",&q=" << &q << ",&b=" << &b << endl;
//		//cout << "p=" << p << ",q=" << q << ",b=" << b << endl;
//		//cout << "*p=" << *p << ",*q=" << *q << ",*b=" << *b << endl;
//		//cout << "\n\n\n";
//		if (q - s == m)
//		{
//			break;
//		}
//	}
//}
//
///***************************************************************************
//  函数名称：
//  功    能：向数组s中输入n个字符（含空格）
//  输入参数：char *s         ：数组
//			const int max_n ：要输入的字符的最大
//  返 回 值：实际输入的字符的个数
//  说    明：
// ***************************************************************************/
//int input(char* s, const int max_n)
//{
//	char* p;  //本函数只允许定义这一个指针变量，不再允许定义任何形式的变量，包括for(int i=0; )等形式
//
//	/* 假设输入的只有空格、ASCII码中的图形字符和汉字，不考虑输入错误 */
//	for (p = s; (p - s) < max_n; p++)
//	{
//		*p = getchar();
//		if (*p == '\n')
//		{
//			*p = 0;
//			break;
//		}
//		else if (p - s == 79)
//		{
//			break;
//		}
//	}
//	return (p - s); //替换为需要返回的真实值
//}
//
///***************************************************************************
//  函数名称：
//  功    能：
//  输入参数：
//  返 回 值：
//  说    明：除允许改动的一行外，其余不准改动
//***************************************************************************/
//int main()
//{
//	char s[N]; //不允许进行初始化!!!
//	int m, n;
//
//	cout << "请输入长度不超过" << N - 1 << "的字符串" << endl;
//	/*  建议：调试时加入标尺，可以准确判断输入长度
//		cout << "====================================================================================================" << endl;
//		cout << "0         1         2         3         4         5         6         7         8         9         " << endl;
//		cout << "0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789" << endl;
//		cout << "====================================================================================================" << endl;
//	*/
//	n = input(s, N - 1);
//
//	if (n == 0) {
//		cout << "输入空串" << endl;
//		return -1;
//	}
//	else {
//		cout << "原始：" << s << '*' << endl; //最后加一个*来查看位置
//	}
//
//	cout << "请输入向后移动的位置m[1..2^31-1]" << endl;
//	cin >> m;
//
//	move_data(s, n, m % n); //本行允许改动 
//
//	cout << "移动：" << s << '*' << endl; //最后加一个*来查看位置
//
//	return 0;
//}
