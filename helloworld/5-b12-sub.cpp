///* 信管 2051891 黄治东 */
//
///* 函数实现部分，{ }内的东西可以任意调整，目前的return 0只是一个示例，可改变 */
//
///* 不允许定义任何形式的外部全局、静态全局、宏定义、只读变量 */
//
///***************************************************************************
//  函数名称：
//  功    能：
//  输入参数：
//  返 回 值：
//  说    明：
//***************************************************************************/
//int tj_strlen(const char str[])
//{
//    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
//    int i = 0;
//    for (i = 0; str[i]!='\0'; i++)
//    {
//        ;
//    }
//    return i; //return值可根据需要修改
//}
//
///***************************************************************************
//  函数名称：
//  功    能：
//  输入参数：
//  返 回 值：
//  说    明：
//***************************************************************************/
//int tj_strcat(char s1[], const char s2[])
//{
//    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
//    int s1_len = tj_strlen(s1);
//    int s2_len = tj_strlen(s2);
//    for (int i = 0; i < s2_len+1;i++)
//    {
//        s1[s1_len + i] = s2[i];
//    }
//    return 0; //return值可根据需要修改
//}
//
///***************************************************************************
//  函数名称：
//  功    能：
//  输入参数：
//  返 回 值：
//  说    明：
//***************************************************************************/
//int tj_strncat(char s1[], const char s2[], const int len)
//{
//    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
//    int s1_len = tj_strlen(s1);
//    int s2_len = tj_strlen(s2);
//    for (int i = 0; i < s2_len + 1; i++)
//    {
//        s1[s1_len + i] = s2[i];
//        if (i == len)
//        {
//            s1[s1_len + i] = '\0';
//            break;
//        }
//    }
//    return 0; //return值可根据需要修改
//}
//
///***************************************************************************
//  函数名称：
//  功    能：
//  输入参数：
//  返 回 值：
//  说    明：
//***************************************************************************/
//int tj_strcpy(char s1[], const char s2[])
//{
//    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
//    int s2_len = tj_strlen(s2);
//    for (int i = 0; i <= s2_len; i++)
//    {
//        s1[i] = s2[i];
//    }
//    return 0; //return值可根据需要修改
//}
//
///***************************************************************************
//  函数名称：
//  功    能：
//  输入参数：
//  返 回 值：
//  说    明：
//***************************************************************************/
//int tj_strncpy(char s1[], const char s2[], const int len)
//{
//    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
//    int s2_len = tj_strlen(s2);
//    for (int i = 0; i < s2_len; i++)
//    {
//        s1[i] = s2[i];
//        if (i == len)
//        {
//            break;
//        }
//    }
//    return 0; //return值可根据需要修改
//}
//
///***************************************************************************
//  函数名称：
//  功    能：
//  输入参数：
//  返 回 值：
//  说    明：
//***************************************************************************/
//int tj_strcmp(const char s1[], const char s2[])
//{
//    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
//    int s1_len = tj_strlen(s1);
//    int s2_len = tj_strlen(s2);
//    int max_len = (s1_len > s2_len ? s1_len : s2_len);
//    for (int i = 0; i <= max_len; i++)
//    {
//        if (s1[i] != s2[i])
//        {
//            return s1[i] - s2[i];
//        }
//    }
//    return 0; //return值可根据需要修改
//}
//
///***************************************************************************
//  函数名称：
//  功    能：
//  输入参数：
//  返 回 值：
//  说    明：
//***************************************************************************/
//int tj_strcasecmp(const char s1[], const char s2[])
//{
//    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
//    int s1_len = tj_strlen(s1);
//    int s2_len = tj_strlen(s2);
//    int max_len = (s1_len > s2_len ? s1_len : s2_len);
//    for (int i = 0; i <= max_len; i++)
//    {
//        char temp1=s1[i], temp2=s2[i];
//        if (temp1 >= 'A' && temp1 <= 'Z')
//        {
//            temp1 += 'a' - 'A';
//        }
//        if (temp2 >= 'A' && temp2 <= 'Z')
//        {
//            temp2 += 'a' - 'A';
//        }
//        if (temp1 != temp2)
//        {
//            return temp1 - temp2;
//        }
//    }
//    return 0; //return值可根据需要修改
//}
//
///***************************************************************************
//  函数名称：
//  功    能：
//  输入参数：
//  返 回 值：
//  说    明：
//***************************************************************************/
//int tj_strncmp(const char s1[], const char s2[], const int len)
//{
//    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
//    int s1_len = tj_strlen(s1);
//    int s2_len = tj_strlen(s2);
//    int max_len = (s1_len > s2_len ? s1_len : s2_len);
//    for (int i = 0; i < max_len; i++)
//    {
//        if (s1[i] != s2[i])
//        {
//            return s1[i] - s2[i];
//        }
//        if (i == len-1)
//        {
//            break;
//        }
//    }
//    return 0; //return值可根据需要修改
//}
//
///***************************************************************************
//  函数名称：
//  功    能：
//  输入参数：
//  返 回 值：
//  说    明：
//***************************************************************************/
//int tj_strcasencmp(const char s1[], const char s2[], const int len)
//{
//    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
//    int s1_len = tj_strlen(s1);
//    int s2_len = tj_strlen(s2);
//    int max_len = (s1_len > s2_len ? s1_len : s2_len);
//    for (int i = 0; i < max_len; i++)
//    {
//        char temp1 = s1[i], temp2 = s2[i];
//        if (temp1 >= 'A' && temp1 <= 'Z')
//        {
//            temp1 += 'a' - 'A';
//        }
//        if (temp2 >= 'A' && temp2 <= 'Z')
//        {
//            temp2 += 'a' - 'A';
//        }
//        if (temp1 != temp2)
//        {
//            return temp1 - temp2;
//        }
//        if (i == len - 1)
//        {
//            break;
//        }
//    }
//    return 0; //return值可根据需要修改
//}
//
///***************************************************************************
//  函数名称：
//  功    能：
//  输入参数：
//  返 回 值：
//  说    明：
//***************************************************************************/
//int tj_strupr(char str[])
//{
//    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
//    for (int i = 0; i < tj_strlen(str); i++)
//    {
//        if (str[i] >= 'a' && str[i] <= 'z')
//        {
//            str[i] -= 'a' - 'A';
//        }
//    }
//    
//    return 0; //return值可根据需要修改
//}
//
///***************************************************************************
//  函数名称：
//  功    能：
//  输入参数：
//  返 回 值：
//  说    明：
//***************************************************************************/
//int tj_strlwr(char str[])
//{
//    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
//    for (int i = 0; i < tj_strlen(str); i++)
//    {
//        if (str[i] >= 'A' && str[i] <= 'Z')
//        {
//            str[i] += 'a' - 'A';
//        }
//    }
//    return 0; //return值可根据需要修改
//}
//
///***************************************************************************
//  函数名称：
//  功    能：
//  输入参数：
//  返 回 值：
//  说    明：
//***************************************************************************/
//int tj_strchr(const char str[], char ch)
//{
//    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
//    for (int i = 0; i < tj_strlen(str); i++)
//    {
//        if (str[i] == ch)
//        {
//            return i + 1;
//        }
//    }
//    return 0; //return值可根据需要修改
//}
//
///***************************************************************************
//  函数名称：
//  功    能：
//  输入参数：
//  返 回 值：
//  说    明：
//***************************************************************************/
//int tj_strstr(const char str[], const char substr[])
//{
//    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
//    for (int i = 0; i <= tj_strlen(str)-tj_strlen(substr); i++)
//    {
//        if (str[i] == substr[0])
//        {
//            for (int j = 0; j < tj_strlen(substr); j++)
//            {
//                if (str[i + j] != substr[j])
//                {
//                    break;
//                }
//                if (j == tj_strlen(substr) - 1)
//                {
//                    return i+1;
//                }
//            }
//        }
//    }
//
//    return 0; //return值可根据需要修改
//}
//
///***************************************************************************
//  函数名称：
//  功    能：
//  输入参数：
//  返 回 值：
//  说    明：
//***************************************************************************/
//int tj_strrchr(const char str[], const char ch)
//{
//    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
//    for (int i = tj_strlen(str); i>0; i--)
//    {
//        if (str[i-1] == ch)
//        {
//            return i;
//        }
//    }
//    return 0; //return值可根据需要修改
//}
//
///***************************************************************************
//  函数名称：
//  功    能：
//  输入参数：
//  返 回 值：
//  说    明：
//***************************************************************************/
//int tj_strrstr(const char str[], const char substr[])
//{
//    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
//    for (int i = tj_strlen(str) - tj_strlen(substr); i >= 0; i--)
//    {
//        if (str[i] == substr[0])
//        {
//            for (int j = 0; j < tj_strlen(substr); j++)
//            {
//                if (str[i + j] != substr[j])
//                {
//                    break;
//                }
//                if (j == tj_strlen(substr) - 1)
//                {
//                    return i+1;
//                }
//            }
//        }
//    }
//    return 0; //return值可根据需要修改
//}
//
///***************************************************************************
//  函数名称：
//  功    能：
//  输入参数：
//  返 回 值：
//  说    明：
//***************************************************************************/
//int tj_strrev(char str[])
//{
//    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
//    for (int i = 0; i < tj_strlen(str)/2; i++)
//    {
//        char temp = str[tj_strlen(str) - 1 - i];
//        str[tj_strlen(str) - 1 - i] = str[i];
//        str[i] = temp;
//    }
//    return 0; //return值可根据需要修改
//}